<?php
// ==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--
// Products Magento Class  [V.0.0.1]  (2017-05-11)
// Brqx Group - Agile Farmacia Zaragoza Methodology
// Spc - Cica_d05 - Home - Index_06 - v0_0_1
//-------------------------------------------------------------------------------------
// Manage Magento object - Abstraction for Magento version
//-------------------------------------------------------------------------------------
// ==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--
// Methods:
// - create_product		: Create product by code , name , price
// - assign_catToproduct : Assign product to category with category SKU and produc Code
// - delete_product : Delete product by code
// - get_productlist : Get all product list
//-------------------------------------------------------------------------------------
// - build_data   	  : Build html final code for object 
// ==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--


class mgi_products extends mg_print	
{
	public		$n 			=	'mgi_products::'			;


    public function __construct ()
   	{   

	}
	
	//create_product('code4','product4',100)
	public function create_product($code,$name,$price,$_objectManager)
   	{  
    $state = $_objectManager->get('Magento\Framework\App\State');
	$state->setAreaCode('frontend');
	$_objectManager->get('Magento\Framework\Registry')->register('isSecureArea', true);	
	$_product = $_objectManager->create('Magento\Catalog\Model\Product');
	
	$pId=$_product->getIdBySku($code);
	
	if($pId){
	echo 'product already exists';
	return false;
	}
	
	$_product->setName($name);
	$_product->setTypeId('simple');
	$_product->setAttributeSetId(4);
	$_product->setSku($code);
	$_product->setWebsiteIds(array(1));
	$_product->setVisibility(4);
	$_product->setPrice($price);
	$_product->setStatus(1);
	$_product->setStockData(array(
			'use_config_manage_stock' => 0, //'Use config settings' checkbox
			'manage_stock' => 1, //manage stock
			'min_sale_qty' => 1, //Minimum Qty Allowed in Shopping Cart
			'max_sale_qty' => 2, //Maximum Qty Allowed in Shopping Cart
			'is_in_stock' => 1, //Stock Availability
			'qty' => 100 //qty
			)
		);

	$_product->save();
	}
	
	//assign product to category
	//assign_catToproduct('C-01_01_01-351','code4');//parems first for category sku and second for product SKU
	public function assign_catToproduct($csku,$pcode){
		//echo $csku;die;
		$id = Mage::getModel('catalog/product')->getIdBySku($pcode);
		if (false !== $id) {
		//sku exists
		$_category = Mage::getResourceModel('catalog/category_collection')
        ->addFieldToFilter('category_sku', $csku);
		//->addAttributeToFilter('level',$level)
        //->getFirstItem();
		$cid=$_category->getFirstItem()->getId();
		if($cid==''){
		echo $csku.' category not exists';
		return 0;
		}

		$category = Mage::getModel('catalog/category')->load($cid);

		$catids = array();
		$catids[]=$cid;
		foreach ($category->getParentCategories() as $parent) {
			$catids[] = $parent->getId();
		}
		$product = Mage::getModel('catalog/product')->loadByAttribute('sku', $pcode);
		if($product){
			$product->setCategoryIds($catids)->save();
		}
		
		}else{
		echo $pcode.' product not exists';
		return 0;
		
		}		
	}
	
	//delete_product('code4')
	public function delete_product($_objectManager,$sku){
		$state = $_objectManager->get('Magento\Framework\App\State');
		$state->setAreaCode('frontend');
		$_objectManager->get('Magento\Framework\Registry')->register('isSecureArea', true);	
	    $product = $_objectManager->create('Magento\Catalog\Model\Product');//
	    $pId=$product->getIdBySku($sku);
	    $product->load($pId)->delete();

	}
	
	//get_productlist()
	public function get_productlist($_objectManager){
		$_products = $_objectManager->create('Magento\Catalog\Model\ResourceModel\Product\Collection');
		foreach($_products as $product){
		echo $product->getName();
		echo $product->getSku();
		}		
	}



}
 
